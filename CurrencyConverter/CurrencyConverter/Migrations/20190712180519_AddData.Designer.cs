// <auto-generated />
using System;
using CurrencyConverter.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CurrencyConverter.Migrations
{
    [DbContext(typeof(CurrencyContext))]
    [Migration("20190712180519_AddData")]
    partial class AddData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CurrencyConverter.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "AUD"
                        },
                        new
                        {
                            Id = 2,
                            Name = "CAD"
                        },
                        new
                        {
                            Id = 3,
                            Name = "CZK"
                        },
                        new
                        {
                            Id = 4,
                            Name = "DKK"
                        },
                        new
                        {
                            Id = 5,
                            Name = "HUF"
                        },
                        new
                        {
                            Id = 6,
                            Name = "JPY"
                        },
                        new
                        {
                            Id = 7,
                            Name = "NOK"
                        },
                        new
                        {
                            Id = 8,
                            Name = "SEK"
                        },
                        new
                        {
                            Id = 9,
                            Name = "CHF"
                        },
                        new
                        {
                            Id = 10,
                            Name = "GBP"
                        },
                        new
                        {
                            Id = 11,
                            Name = "USD"
                        },
                        new
                        {
                            Id = 12,
                            Name = "BAM"
                        },
                        new
                        {
                            Id = 13,
                            Name = "EUR"
                        },
                        new
                        {
                            Id = 14,
                            Name = "PLN"
                        });
                });

            modelBuilder.Entity("CurrencyConverter.Models.RateByDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CurrencyId");

                    b.Property<DateTime>("Date");

                    b.Property<double>("Rate");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("CurrencyConverter.Models.RateByDate", b =>
                {
                    b.HasOne("CurrencyConverter.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");
                });
#pragma warning restore 612, 618
        }
    }
}
